% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coat.R
\name{coat}
\alias{coat}
\title{Conditional Method Agreement Trees (COAT)}
\usage{
coat(
  formula,
  data,
  subset,
  na.action,
  weights,
  means = FALSE,
  type = c("ctree", "mob"),
  ...
)
}
\arguments{
\item{formula}{symbolic description of the model of type \code{y1 + y2 ~ x1 + ... + xk}.
The left-hand side should specify a pair of measurements (\code{y1} and \code{y2}) for the Bland-Altman analysis.
The right-hand side can specify any number of potential split variables for the tree.}

\item{data, subset, na.action}{arguments controlling the formula processing
via \code{\link[stats]{model.frame}}.}

\item{weights}{optional numeric vector of weights (case/frequency weights, by default).}

\item{means}{logical. Should the intra-individual mean values of measurements
be included as potential split variable?}

\item{type}{character string specifying the type of tree to be fit. Either \code{"ctree"} (default) or \code{"mob"}.}

\item{...}{further control arguments, either passed to \code{\link[partykit]{ctree_control}}
or \code{\link[partykit]{mob_control}}, respectively.}
}
\value{
Object of class \code{coat}, inheriting either from \code{constparty} (if \code{\link[partykit]{ctree}}
is used) or \code{modelparty} (if \code{\link[partykit]{mob}} is used).
}
\description{
Tree models capturing the dependence of method agreement on covariates.
The classic Bland-Altman analysis is used for modeling method agreement
while the covariate dependency can be learned either nonparametrically
via conditional inference trees (CTree) or using model-based recursive
partitioning (MOB).
}
\details{
The minimum number of observations required to model conditional
agreement defaults to 20. Users may choose to modify this value as needed. See
\code{\link[partykit]{ctree_control}} and \code{\link[partykit]{mob_control}} for details.

In addition to the standard specification of the two response measurements in the
formula via \code{y1 + y2 ~ ...}, it is also possible to use \code{y1 - y2 ~ ...}.
The latter may be more intuitive for users that think of it as a model for the
difference of two measurements. Finally \code{cbind(y1, y2) ~ ...} also works.
Internally, all of these are processed in the same way, namely as a bivariate
dependent variable that can then be modeled and plotted appropriately.

To add the means of the measurement pair as a potential splitting variable,
there are also different equivalent strategies. The standard specification would
be via the \code{means} argument: \code{y1 + y2 ~ x1 + ..., means = TRUE}.
Alternatively, the user can also extend the formula argument via
\code{y1 + y2 ~ x1 + ... + means(y1, y2)} or via
\code{y1 + y2 ~ x1 + ... + I((y1 + y2)/2)}.
}
\examples{
\dontshow{ if(!requireNamespace("MethComp")) {
  if(interactive() || is.na(Sys.getenv("_R_CHECK_PACKAGE_NAME_", NA))) {
    stop("the MethComp package is required for this example but is not installed")
  } else q() }
}
## package and data (reshaped to wide format)
library("coat")
data("scint", package = "MethComp")
scint_wide <- reshape(scint, v.names = "y", timevar = "meth", idvar = "item", direction = "wide")

## coat based on ctree() without and with mean values of paired measurements as predictor
tr1 <- coat(y.DTPA + y.DMSA ~ age + sex, data = scint_wide)
tr2 <- coat(y.DTPA + y.DMSA ~ age + sex, data = scint_wide, means = TRUE)

## display
print(tr1)
plot(tr1)

print(tr2)
plot(tr2)
}
